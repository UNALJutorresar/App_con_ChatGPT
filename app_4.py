# -*- coding: utf-8 -*-
"""apps.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14uS8HhY1nJykgarqC4gDQ9hIQpbGqoIT
"""

import streamlit as st
import pandas as pd

# Título de la app
st.title("Cálculo del PAPA (Promedio Académico Ponderado Acumulado)")

# Autor de la app
st.write("Esta app fue elaborada por Juan Camilo Torres Arboleda.")

# Crear una estructura de datos para almacenar la información de las materias
if "materias" not in st.session_state:
    st.session_state.materias = pd.DataFrame(
        columns=["Materia", "Calificación", "Créditos", "Tipología"]
    )


def agregar_materia():
    """Agrega una nueva materia con su calificación, créditos y tipología.

    Permite al usuario ingresar el nombre de la materia, la calificación
    obtenida,los créditos y la tipología de la asignatura. La
    información se almacena en el DataFrame de materias.

    """
    materia = st.text_input("Nombre de la materia")
    calificacion = st.number_input(
        "Calificación", min_value=0.0, max_value=5.0, step=0.1, format="%.1f"
    )
    creditos = st.number_input("Créditos", min_value=1, step=1)
    tipologia = st.selectbox(
        "Tipología de la asignatura",
        ["Disciplinar Optativa", "Disciplinar Obligatoria",
         "Fundamentación Optativa", "Fundamentación Obligatoria",
         "Libre Elección", "Prácticas/Trabajo de Grado"]
    )

    if st.button("Agregar Materia"):
        if materia and calificacion >= 0.0 and creditos > 0:
            # Agregar la materia al DataFrame
            nueva_materia = pd.DataFrame(
                [[materia, calificacion, creditos, tipologia]],
                columns=["Materia", "Calificación", "Créditos", "Tipología"],
            )
            st.session_state.materias = pd.concat(
                [st.session_state.materias, nueva_materia], ignore_index=True
            )
            st.success(f'Materia "{materia}" agregada con éxito')
        else:
            st.warning("Por favor ingresa todos los campos correctamente")


def calcular_papa():
    """Calcula el PAPA global y el PAPA por tipología de asignatura.

    Calcula el Promedio Académico Ponderado Acumulado (PAPA) global
    basado en las calificaciones y los créditos de las materias
    registradas. También calcula el PAPA por tipología de asignatura
    (Teórica, Práctica, Laboratorio, etc.).

    """
    if len(st.session_state.materias) == 0:
        st.warning(
            "No hay materias registradas. Por favor, agrega materias para calcular el PAPA."
        )
        return

    # Calcular el PAPA global
    st.session_state.materias["Ponderación"] = (
        st.session_state.materias["Calificación"]
        * st.session_state.materias["Créditos"]
    )
    total_creditos = st.session_state.materias["Créditos"].sum()
    total_ponderacion = st.session_state.materias["Ponderación"].sum()

    if total_creditos > 0:
        papa_global = total_ponderacion / total_creditos
        st.write(f"### PAPA Global: {papa_global:.2f}")
    else:
        st.write("### PAPA Global: No es posible calcularlo. Faltan datos.")

    # Calcular el PAPA por tipología de asignatura
    st.write("### PAPA por Tipología de Asignatura:")
    tipologias_unicas = st.session_state.materias["Tipología"].unique()

    for tipologia in tipologias_unicas:
        materias_tipologia = st.session_state.materias[
            st.session_state.materias["Tipología"] == tipologia
        ]
        total_creditos_tipologia = materias_tipologia["Créditos"].sum()
        total_ponderacion_tipologia = materias_tipologia["Ponderación"].sum()

        if total_creditos_tipologia > 0:
            papa_tipologia = (
                total_ponderacion_tipologia / total_creditos_tipologia
            )
            st.write(f"**{tipologia}:** {papa_tipologia:.2f}")
        else:
            st.write(
                f"**{tipologia}:** No hay materias registradas para esta tipología."
            )


# Función principal
def main():
    # Sección para agregar una nueva materia
    st.sidebar.header("Agregar Materia")
    agregar_materia()

    # Sección para calcular el PAPA
    st.sidebar.header("Calcular PAPA")
    if st.sidebar.button("Calcular PAPA"):
        calcular_papa()


# Ejecutar la app
if __name__ == "__main__":
    main()